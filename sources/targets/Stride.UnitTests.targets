<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- Do not compile unit test when packaging -->
    <XenkoCompilerTargetsEnable Condition="'$(XenkoSkipUnitTests)' == 'true'">false</XenkoCompilerTargetsEnable>
    <XenkoCompilerTargetsEnable Condition="'$(XenkoPackageBuild)' == 'true'">false</XenkoCompilerTargetsEnable>
    
    <XenkoUnitTest>true</XenkoUnitTest>
    <XenkoCommonDependenciesDir></XenkoCommonDependenciesDir>

    <!-- Unit tests are executables (execute asset compiler, embed native libraries, etc... -->
    <XenkoIsExecutable>true</XenkoIsExecutable>

    <!-- Setup Asset Compiler MSBuild SolutionDir and SolutionName to point to Xenko Windows
         Also disable BuildProjectReferences, otherwise it would try to recompile assemblies currently locked by the CompilerApp itself.
         However, that means that Tests dependencies must be compiled properly on Windows (should be the case usually).
    -->
    <XenkoCompileAssetOptions>--compile-property:BuildProjectReferences=false</XenkoCompileAssetOptions>

    <!-- Workaround for solution dependencies with incompatible frameworks: https://github.com/Microsoft/msbuild/issues/2661#issuecomment-338808156 -->
    <AddSyntheticProjectReferencesForSolutionDependencies>false</AddSyntheticProjectReferencesForSolutionDependencies>

  </PropertyGroup>
  
  <PropertyGroup>
    <XenkoCommonDependenciesDir>$(XenkoPackageXenko)\deps\</XenkoCommonDependenciesDir>
  </PropertyGroup>

  <!-- Override graphics platform (no need to get it from game settings asset) -->
  <Target Name="XenkoGetGraphicsPlatform">
    <!-- Do nothing for XenkoGraphicsApi, keep it as set by locals target -->
    <PropertyGroup>
      <XenkoCompileAssetOptions>$(XenkoCompileAssetOptions) --property:XenkoGraphicsApi=$(XenkoGraphicsApi)</XenkoCompileAssetOptions>
    </PropertyGroup>
  </Target>

  <!-- Used by Xenko.build to detect if unit tests prefer to run in 32 or 64 bits -->
  <Target Name="_XenkoAfterGetTargetPathWithTargetPlatformMoniker" AfterTargets="GetTargetPathWithTargetPlatformMoniker">
    <ItemGroup>
      <TargetPathWithTargetPlatformMoniker Update="$(TargetPath)">
        <PlatformTarget>$(PlatformTarget)</PlatformTarget>
      </TargetPathWithTargetPlatformMoniker>
    </ItemGroup>
  </Target>

  <!-- Make sure xksl/xkfx are properly setup with code generator; also mark generated code file as dependent -->
  <ItemGroup>
    <Compile Update="**\*.xksl.cs" DependentUpon="%(Filename)" />
    <None Update="**\*.xksl" Generator="XenkoShaderKeyGenerator" />
    <Compile Update="**\*.xkfx.cs" DependentUpon="%(Filename)" />
    <None Update="**\*.xkfx" Generator="XenkoEffectCodeGenerator" />
  </ItemGroup>
</Project>
